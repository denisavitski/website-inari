---
import Image from '@elements/Image.astro'
import ProductButton from '@elements/ProductButton.astro'
import Labels, { type Props as LabelsProps } from '@elements/Labels.astro'
import type { ProductFeatureIcon } from '@elements/ProductFeature.astro'
import ProductFeature from '@elements/ProductFeature.astro'
import Price from '@elements/Price.astro'
import ProductVariants from '@elements/ProductVariants.astro'
import { type Props as EnergyProps } from '@elements/Energy.astro'
import type { BasketStoreItem, ProductVariant } from '@utils/types'

export interface MenuProductStat {
  title: string
  value: string
  variantProp?: string
  border?: boolean
}

export interface MenuProductData extends BasketStoreItem {
  feature?: ProductFeatureIcon | undefined | false
  oldPrice?: number | undefined | false
  categories: Array<string>
  subcategories?: Array<string> | undefined | false
  labels?: LabelsProps['list'] | undefined | false
  stats: Array<MenuProductStat>
  variants?: Array<ProductVariant> | undefined | false
  type: 'small' | 'large'
  energy: Omit<EnergyProps, 'class'>
}

export interface Props extends Partial<MenuProductData> {
  class?: string
}

const {
  class: className,
  pid = '1',
  amount = 0,
  price = 1000,
  oldPrice = 2000,
  href = '/products/simple',
  categories = ['Популярное', 'Роллы'],
  subcategories = ['Хосо маки'],
  labels = [
    { value: 'Новинка', color: '#1A8704' },
    { value: 'Акция 10%', color: '#E53935' },
  ],
  name = 'Филадельфия фреш',
  description = 'Филе лосося, сливочный сыр, свежий огурец',
  feature = 'spicy',
  stats = [
    {
      title: 'Вес',
      value: '111 г',
      variantProp: '',
    },
  ],
  variants = [{ name: '4 шт.' }, { name: '8 шт.' }],
  type = 'large',
  energy = { proteins: '111', fats: '111', carbohydrates: '111', calories: '111' },
  image = '/images/food/1.jpg',
  ...rest
} = Astro.props
---

<div
  {...rest}
  class={`menu-product ${className || ''}`}
  data-type={'small'}
  data-categories={categories}
  data-subcategories={subcategories}
>
  <div class="menu-product__card">
    <a
      class="menu-product__popover-button"
      href={href}
    ></a>

    {
      labels && (
        <Labels
          list={labels}
          class="menu-product__labels"
        />
      )
    }

    <Image
      class="menu-product__image"
      src={image}
      lazy
      lazyBackground
      cover
    />

    <div class="menu-product__name">
      <div
        class="f-d-18-s f-m-14-s menu-product__name__value"
        set:html={name}
      />

      {
        feature && (
          <ProductFeature
            class="menu-product__name__icon"
            icon={feature}
          />
        )
      }
    </div>

    {
      description && (
        <div
          class="f-d-14-r f-m-12-r menu-product__description"
          set:html={description}
        />
      )
    }

    <div class="menu-product__info">
      {
        stats.map((stat) => {
          return (
            <div class="menu-product__stat">
              <div
                class="f-d-16-s f-m-14-s menu-product__stat__title"
                set:html={stat.title}
              />
              <div
                class="f-d-16-s f-m-14-s menu-product__stat__value"
                set:html={stat.value}
                data-border={stat.border}
              />
            </div>
          )
        })
      }

      {
        variants && (
          <ProductVariants
            class="menu-product__variants"
            variants={variants}
            name={name}
          />
        )
      }
    </div>

    <div class="menu-product__bottom">
      <Price
        class="menu-product__price"
        value={price}
        oldValue={oldPrice}
      />
      <ProductButton
        class="menu-product__button"
        placeholder="В корзину"
        counter={amount}
        size={'always-big'}
        name={name}
      />
    </div>
  </div>
</div>

<style is:global>
  .menu-product {
    display: contents;
  }

  .menu-product__card {
    position: relative;

    display: flex;
    flex-direction: column;

    padding: 1.6rem;

    border-radius: var(--border-radius-2);
    border: 0.1rem solid var(--color-secondary-2);

    @media (hover: hover) {
      transition: background-color var(--duration-button);

      &:hover {
        background-color: var(--color-secondary-2);

        .product-variants__variant:not([data-checked]) {
          border-color: var(--color-secondary-1);
        }
      }
    }

    @media (max-width: 768px) {
      padding: 0.8rem;

      /* .menu-product[data-type='large'] & {
        display: grid;
        grid-template-columns: max-content 1fr;
        grid-template-rows: max-content max-content max-content max-content;
        grid-template-areas:
          'image info'
          'name name'
          'description description'
          'bottom bottom';
      } */
    }
  }

  .menu-product__popover-button {
    position: absolute;
    top: 0;
    left: 0;

    z-index: 2;

    width: 100%;
    height: 100%;
  }

  .menu-product__labels {
    position: absolute;
    top: 2.6rem;
    left: 2.6rem;

    z-index: 2;

    @media (max-width: 768px) {
      left: unset;
      top: 0.8rem;
      right: 0.8rem;
    }
  }

  .menu-product__image {
    width: 100%;
    height: 27.3rem;
    margin-bottom: 2.4rem;

    border-radius: var(--border-radius-1);

    @media (max-width: 768px) {
      height: 15rem;

      .menu-product[data-type='large'] & {
        grid-area: image;
        width: 15.95rem;
        margin-bottom: 1.2rem;
      }

      .menu-product[data-type='small'] & {
        margin-bottom: 0.8rem;
      }
    }
  }

  .menu-product__name {
    margin-bottom: 0.8rem;

    display: inline-flex;
    align-items: center;

    @media (max-width: 768px) {
      min-height: 2.2rem;

      .menu-product[data-type='large'] & {
        grid-area: name;
      }
    }
  }

  .menu-product__name__value {
  }

  .menu-product__name__icon {
    margin-left: 0.8rem;
  }

  .menu-product__description {
    margin-bottom: 2.4rem;

    @media (max-width: 768px) {
      margin-bottom: 1.6rem;

      .menu-product[data-type='large'] & {
        grid-area: description;
      }
    }
  }

  .menu-product__info {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.8rem 1.8rem;
    flex-wrap: wrap;

    margin-bottom: 1.6rem;
    margin-top: auto;

    @media (max-width: 768px) {
      .menu-product[data-type='large'] & {
        grid-area: info;
        align-self: end;

        flex-direction: column;
        align-items: flex-end;
        gap: 0.6rem 1.2rem;

        margin-bottom: 1.2rem;
      }

      .menu-product[data-type='small'] & {
        gap: 0.6rem 1.2rem;
        margin-bottom: 2.4rem;
      }
    }
  }

  .menu-product__stat {
    display: flex;
    gap: 1.2rem;

    @media (max-width: 768px) {
      gap: 0.8rem;
    }
  }

  .menu-product__stat__title {
    color: var(--color-secondary-3);
  }

  .menu-product__stat__value {
    &[data-border] {
      border: 0.1rem solid var(--color-secondary-2);
      border-radius: var(--border-radius-1);
      padding: 0.4rem 1.6rem;
    }

    @media (min-width: 769px) {
      margin-left: auto;
    }

    @media (max-width: 768px) {
      .menu-product[data-type='small'] & {
        margin-left: auto;
      }

      &[data-border] {
        padding: 0.4rem 1.2rem;
      }
    }
  }

  .menu-product__variants {
    position: relative;
    z-index: 3;

    flex-shrink: 0;
    margin-left: auto;
    flex-grow: 2;
  }

  .menu-product__bottom {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2.4rem;

    @media (max-width: 768px) {
      .menu-product[data-type='large'] & {
        grid-area: bottom;
        justify-content: flex-end;
      }

      .menu-product[data-type='small'] & {
        flex-direction: column;
        gap: 0.8rem;
        justify-content: flex-end;
      }
    }
  }

  .menu-product__price {
  }

  .menu-product__button {
    position: relative;
    z-index: 3;

    flex-shrink: 0;

    width: 12rem;
    height: 3.6rem;

    @media (max-width: 768px) {
      height: 3.4rem;

      .menu-product[data-type='large'] & {
        width: 10.9rem;
      }

      .menu-product[data-type='small'] & {
        width: 100%;
      }
    }
  }
</style>
