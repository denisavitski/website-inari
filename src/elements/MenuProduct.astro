---
import type { BasketStoreItem } from '@stores/basketStore'
import Icon from './Icon.astro'
import Image from './Image.astro'
import Product from './Product.astro'
import ProductButton from './ProductButton.astro'
import { numberToPrice } from '@utils/number'

export const componentDescription = `
  <code>\
    &lt;e-input-group&gt;CONTENT&lt;/e-input-group&gt;
  </code>
`
export interface MenuProductData extends BasketStoreItem {
  icon?: 'spicy' | 'eco' | undefined
  categories: Array<string>
  subcategories: Array<string>
  labels: Array<{ color: string; value: string }>
  info: {
    title: string
    value?: string | undefined
    variants?: Array<{
      shortName: string
      name: string
      pid: string
      size: string
      price: string
    }>
  }
  type: 'small' | 'large'
}

export interface Props extends Partial<MenuProductData> {
  class?: string
}

const {
  class: className,
  pid = '1',
  amount = 0,
  price = '1000',
  image = '/images/food/1.jpg',
  categories = ['Популярное', 'Роллы'],
  subcategories = ['Хосо маки'],
  labels = [
    { value: 'Новинка', color: '#1A8704' },
    { value: 'Акция 10%', color: '#E53935' },
  ],
  name = 'Филадельфия фреш',
  description = 'Филе лосося, сливочный сыр, свежий огурец',
  icon = 'spicy',
  info = {
    title: 'Вес',
    value: '',
    variants: [
      { shortName: '4 шт.', name: 'Филадельфия фреш 4 шт.', pid: '1', price: 111, size: '10г' },
      { shortName: '8 шт.', name: 'Филадельфия фреш 8 шт.', pid: '2', price: 222, size: '20г' },
    ],
  },
  type = 'large',
  ...rest
} = Astro.props
---

<Product
  {...rest}
  class={`menu-product ${className || ''}`}
  {pid}
  {price}
  {image}
  {name}
  {description}
  data-type={type}
  data-categories={categories}
  data-subcategories={subcategories}
>
  <div class="menu-product__labels">
    {
      labels.map((label) => {
        return (
          <div
            class="f-d-14-s f-m-12-s menu-product__label"
            set:html={label.value}
            style={{ backgroundColor: label.color }}
          />
        )
      })
    }
  </div>

  <Image
    class="menu-product__image"
    src={image}
    lazy
    lazyBackground
    cover
  />

  <div class="menu-product__name">
    <div
      class="f-d-18-s f-m-14-s menu-product__name__value"
      set:html={name}
    />

    <Icon
      class="menu-product__name__icon"
      name={icon}
    />
  </div>

  <div
    class="f-d-14-r f-m-12-r menu-product__description"
    set:html={description}
  />

  <div class="menu-product__info">
    <div class="menu-product__info__left">
      <div
        class="f-d-16-s f-m-14-s menu-product__info__title"
        set:html={info.title}
      />
      <div
        class="f-d-16-s f-m-14-s menu-product__info__value"
        data-variant-size
        set:html={info.value}
      />
    </div>

    {
      info.variants && (
        <e-input-group class="menu-product__info__variants">
          {info.variants?.map((variant, i) => {
            return (
              <label class="f-d-16-s f-m-14-s menu-product__info__variant">
                <input
                  type="radio"
                  name={name}
                  class="visually-hidden menu-product__info__variant__input"
                  data-pid={variant.pid}
                  data-name={variant.name}
                  data-price={variant.size}
                  checked={i === 0}
                  data-variant-size-value={variant.size}
                  data-variant-price-value={numberToPrice(variant.price)}
                />
                <span
                  class="menu-product__info__variant__value"
                  set:html={variant.shortName}
                />
              </label>
            )
          })}
        </e-input-group>
      )
    }
  </div>

  <div class="menu-product__bottom">
    <div
      class="f-d-24-s f-d-18-s menu-product__price"
      data-variant-price
      set:html={numberToPrice(price)}
    />
    <ProductButton
      class="menu-product__button"
      placeholder="В корзину"
      counter={amount}
    />
  </div>
</Product>

<style is:global>
  .menu-product {
    position: relative;

    display: block;

    padding: 1.6rem;

    border-radius: var(--border-radius-2);
    border: 0.1rem solid var(--color-secondary-2);

    @media (max-width: 768px) {
      padding: 0.8rem;

      &[data-type='large'] {
        display: grid;
        grid-template-columns: max-content 1fr;
        grid-template-rows: max-content max-content max-content max-content;
        grid-template-areas:
          'image info'
          'name name'
          'description description'
          'bottom bottom';
      }
    }
  }

  .menu-product__labels {
    position: absolute;
    top: 2.6rem;
    left: 2.6rem;

    z-index: 2;

    display: flex;
    align-items: center;
    gap: 0.5rem;

    @media (max-width: 768px) {
      left: unset;
      top: 0.8rem;
      right: 0.8rem;
    }
  }

  .menu-product__label {
    padding: 0.4rem 0.6rem;
    border-radius: 0.5rem;
  }

  .menu-product__image {
    width: 100%;
    height: 27.3rem;
    margin-bottom: 2.4rem;

    border-radius: var(--border-radius-1);

    @media (max-width: 768px) {
      height: 15rem;

      .menu-product[data-type='large'] & {
        grid-area: image;
        width: 15.95rem;
        margin-bottom: 1.2rem;
      }

      .menu-product[data-type='small'] & {
        margin-bottom: 0.8rem;
      }
    }
  }

  .menu-product__name {
    margin-bottom: 0.8rem;

    display: inline-flex;
    align-items: center;

    @media (max-width: 768px) {
      .menu-product[data-type='large'] & {
        grid-area: name;
      }
    }
  }

  .menu-product__name__value {
  }

  .menu-product__name__icon {
    width: 2.2rem;
    height: 2.2rem;
    margin-left: 0.8rem;

    &[data-name='spicy'] {
      fill: var(--color-functional-1);
    }

    &[data-name='eco'] {
      fill: var(--color-secondary-7);
    }
  }

  .menu-product__description {
    margin-bottom: 2.4rem;

    @media (max-width: 768px) {
      margin-bottom: 1.6rem;

      .menu-product[data-type='large'] & {
        grid-area: description;
      }
    }
  }

  .menu-product__info {
    display: flex;
    align-items: center;

    margin-bottom: 1.6rem;

    @media (max-width: 768px) {
      .menu-product[data-type='large'] & {
        grid-area: info;
        align-self: end;

        flex-direction: column;
        align-items: flex-end;
        gap: 1.2rem;

        margin-bottom: 1.2rem;
      }

      .menu-product[data-type='small'] & {
        margin-bottom: 3.3rem;
      }
    }
  }

  .menu-product__info__left {
    display: contents;

    @media (max-width: 768px) {
      .menu-product[data-type='large'] & {
        display: flex;
      }
    }
  }

  .menu-product__info__title {
    margin-right: 1.2rem;
    color: var(--color-secondary-3);

    @media (max-width: 768px) {
      margin-right: 0.8rem;
    }
  }

  .menu-product__info__value {
    @media (min-width: 769px) {
      margin-left: auto;
    }

    @media (max-width: 768px) {
      .menu-product[data-type='small'] & {
        margin-left: auto;
      }
    }
  }

  .menu-product__info__variants {
    margin-left: auto;

    flex-grow: 2;

    display: flex;
    justify-content: flex-end;
    gap: 0.8rem;
  }

  .menu-product__info__variant {
    position: relative;
    cursor: pointer;
    display: block;
  }

  .menu-product__info__variant__input {
  }

  .menu-product__info__variant__value {
    display: block;

    padding: 0.4rem 1.6rem;

    border: 0.1rem solid var(--color-secondary-2);
    border-radius: var(--border-radius-1);

    transition:
      border-color var(--duration-button),
      background-color var(--duration-button);

    .menu-product__info__variant__input:checked ~ & {
      background-color: var(--color-functional-1);
      border-color: var(--color-functional-1);
    }
  }

  .menu-product__bottom {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2.4rem;

    @media (max-width: 768px) {
      .menu-product[data-type='large'] & {
        grid-area: bottom;
        justify-content: flex-end;
      }

      .menu-product[data-type='small'] & {
        flex-direction: column;
        gap: 0.8rem;
        justify-content: flex-end;
      }
    }
  }

  .menu-product__price {
  }

  .menu-product__button {
    flex-shrink: 0;

    width: 12rem;
    height: 3.6rem;

    @media (max-width: 768px) {
      height: 3.4rem;

      .menu-product[data-type='large'] & {
        width: 10.9rem;
      }

      .menu-product[data-type='small'] & {
        width: 100%;
      }
    }
  }
</style>
