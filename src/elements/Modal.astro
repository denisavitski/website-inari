---
import Icon from './Icon.astro'

export const modal = '#modal'

export interface Props {
  tag?: string
  id?: string
  class?: string
}

const { tag = 'e-swipe-popover', id = 'modal', class: className, ...rest } = Astro.props

const Tag = tag as any
---

<Tag
  class:list={['modal', className]}
  {id}
  {...rest}
>
  <div
    class="modal__inner"
    data-outside
  >
    <div
      class="modal__swipe"
      data-swipe
    >
      <div class="modal__swipe__inner">
        <div
          class="modal__swipe-knob"
          data-swipe-knob
        ></div>
        <div class="modal__content hidden-scrollbar">
          <e-popover-button
            target={id}
            class="modal__close-button"
            ><Icon
              class="modal__close-button__icon"
              name="close"
            /></e-popover-button
          >
          <div class="modal__slot">
            <slot />
          </div>
        </div>
      </div>
    </div>
  </div>
</Tag>

<style is:global>
  .modal {
    --history: true;
    --escape: true;
    --click-outside: true;

    --modal-transition: 0.3s var(--ease-out-circ);
    --max-height: 100vh;

    position: fixed;
    top: 0;
    left: 0;

    z-index: var(--z-modal);

    width: 100%;
    height: 100%;

    display: none;
    opacity: 0;

    transition: opacity var(--modal-transition);

    background-color: rgba(0, 0, 0, 0.8);

    &.triggered {
      display: block;
    }

    &.opened {
      opacity: 1;
    }

    @media (max-width: 768px) {
      --swipe-enabled: true;
      --max-height: 80vh;
    }
  }

  .modal__inner {
    width: 100%;
    height: 100%;

    display: flex;
    align-items: center;
    justify-content: center;

    @media (min-width: 769px) {
      overflow: hidden auto;
    }

    @media (max-width: 768px) {
      align-items: flex-end;
    }
  }

  .modal__swipe {
    max-height: var(--max-height);

    @media (max-width: 768px) {
      width: 100%;
    }
  }

  .modal__swipe__inner {
    @media (max-width: 768px) {
      max-height: var(--max-height);

      transition: transform var(--modal-transition);
      transform: translateY(101%);

      .modal.triggered & {
        will-change: transform;
      }

      .modal.opened & {
        transform: translateY(0);
      }
    }
  }

  .modal__swipe-knob {
    display: none;

    @media (max-width: 768px) {
      position: absolute;
      left: 0;
      bottom: 100%;

      width: 100%;
      display: flex;
      align-items: center;
      justify-content: center;

      height: 3.4rem;

      user-select: none;

      &::after {
        content: '';

        width: 10rem;
        height: 0.5rem;

        background-color: var(--color-secondary-3);
        border-radius: var(--border-radius-1);
      }
    }
  }

  .modal__content {
    position: relative;

    background-color: var(--color-primary-1);
    border-radius: var(--border-radius-2);
    border: 0.1rem solid var(--color-secondary-1);

    @media (max-width: 768px) {
      width: 100%;
      max-height: var(--max-height);

      display: flex;
      justify-content: center;

      overflow: hidden auto;
    }
  }

  .modal__slot {
    width: 100%;
    height: max-content;
    padding: 5rem;

    @media (max-width: 768px) {
      padding: 2.4rem 1.6rem;
    }
  }

  .modal__close-button {
    --type: close;

    position: absolute;
    top: 1.6rem;
    right: 1.6rem;

    width: 3.2em;
    height: 3.2em;

    fill: var(--color-secondary-3);

    @media (max-width: 768px) {
      display: none;
    }
  }

  .modal__close-button__icon {
    width: 100%;
    height: 100%;

    fill: var(--color-primary);
  }
</style>
