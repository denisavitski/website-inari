---
import type { ImageDataProps } from './Image.astro'
import Image from './Image.astro'
import SliderBullets from './SliderBullets.astro'

export interface Props {
  class?: string
  items?: Array<{ image: ImageDataProps; title: string; description: string }>
}

const {
  class: className,
  items = [
    {
      image: { src: '/images/billboard/1.jpg' },
      title: 'Акция для новых гостей',
      description:
        'При первом заказе в нашем ресторане вы получаете бесплатный ролл на выбор в подарок',
    },
    {
      image: { src: '/images/billboard/2.jpg' },
      title: 'Акция для новых гостей',
      description:
        'При первом заказе в нашем ресторане вы получаете бесплатный ролл на выбор в подарок',
    },
    {
      image: { src: '/images/billboard/3.jpg' },
      title: 'Акция для новых гостей',
      description:
        'При первом заказе в нашем ресторане вы получаете бесплатный ролл на выбор в подарок',
    },
  ],
  ...rest
} = Astro.props
---

<e-billboard
  {...rest}
  class:list={['billboard', className]}
>
  <div class="billboard__content">
    {
      items.map((item) => {
        return (
          <div
            class="billboard__item"
            data-billboard-item
          >
            <Image
              class="billboard__item__image"
              lazy
              lazyBackground
              cover
              {...item.image}
            />

            <div class="billboard__item__content">
              <div
                class="f-d-24-s f-m-18-s billboard__item__title"
                set:html={item.title}
              />
              <div
                class="f-d-16-s f-m-14-s billboard__item__description"
                set:html={item.description}
              />
            </div>
          </div>
        )
      })
    }
  </div>
  <SliderBullets class="billboard__buttons" />
</e-billboard>

<style is:global>
  .billboard {
    --autoplay: 5s;
    --duration: 0.5s;

    display: flex;
    flex-direction: column;
  }

  .billboard__content {
    display: grid;
    overflow: hidden;
    border-radius: var(--border-radius-2);

    margin-bottom: 1.6rem;
  }

  .billboard__item {
    grid-column: 1/1;
    grid-row: 1/1;

    width: var(--width, 100%);
    height: var(--height, 100%);

    position: relative;

    transition: opacity var(--duration);
    opacity: 0;

    &.current {
      opacity: 1;
    }
  }

  .billboard__item__image {
    width: 100%;
    height: 100%;
  }

  .billboard__item__content {
    position: absolute;
    right: 0;
    top: 0;

    z-index: 1;

    width: 47.4rem;
    height: 100%;
    padding: 3.2rem;

    display: flex;
    flex-direction: column;
    justify-content: flex-end;

    background-color: rgba(229, 57, 53, 0.4);

    @media (max-width: 768px) {
      top: unset;
      bottom: 0;

      width: 100%;
      height: max-content;
      padding: 1.6rem 0.8rem;
    }
  }

  .billboard__item__title {
    margin-bottom: 0.8rem;
  }

  .billboard__item__description {
  }

  .billboard__buttons {
    margin-left: auto;
    margin-right: 2rem;

    @media (max-width: 768px) {
      margin-right: 0.8rem;
    }
  }
</style>
